[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\NICOLA~1\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\NICOLA~1\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.6.2 (Oracle Corporation Java 17.0.3.1)
[debug]       Load.loadUnit: plugins took 112.8914ms
[debug]       Load.loadUnit: defsScala took 0.2313ms
[debug] [Loading] Scanning directory C:\Users\Nicolas Puente\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Nicolas Puente\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 25.4664 ms
[debug]           Load.resolveProject(global-plugins) took 58.4774ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Nicolas Puente\.sbt\1.0\plugins, plugins: List(<none>))) took 103.3649ms
[debug] [Loading] Done in C:\Users\Nicolas Puente\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 123.1391ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.3247ms
[debug]     Load.loadUnit(file:/C:/Users/Nicolas%20Puente/.sbt/1.0/plugins/, ...) took 248.4503ms
[debug]   Load.apply: load took 487.8421ms
[debug]   Load.apply: resolveProjects took 7.6063ms
[debug]   Load.apply: finalTransforms took 96.0542ms
[debug]   Load.apply: config.delegates took 12.068ms
[debug]   Load.apply: Def.make(settings)... took 587.4179ms
[debug]   Load.apply: structureIndex took 136.3101ms
[debug]   Load.apply: mkStreams took 2.4696ms
[info] loading global plugins from C:\Users\Nicolas Puente\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 2988.9959ms
[debug]           Load.loadUnit: plugins took 29.5772ms
[debug]           Load.loadUnit: defsScala took 0.0048ms
[debug] [Loading] Scanning directory C:\Users\Nicolas Puente\Documents\La U\2022-1\Taller de Programación\Listener Position\project
[debug]             Load.loadUnit: mkEval took 4.6914ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Nicolas Puente\Documents\La U\2022-1\Taller de Programación\Listener Position\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.3687 ms
[info] loading settings for project listener-position-build from idea.sbt ...
[debug]               Load.resolveProject(listener-position-build) took 3.2799ms
[debug]             Load.loadTransitive: finalizeProject(Project(id listener-position-build, base: C:\Users\Nicolas Puente\Documents\La U\2022-1\Taller de Programación\Listener Position\project, plugins: List(<none>))) took 5.0826ms
[debug] [Loading] Done in C:\Users\Nicolas Puente\Documents\La U\2022-1\Taller de Programación\Listener Position\project, returning: (listener-position-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 128.4375ms
[debug]           Load.loadUnit: cleanEvalClasses took 5.6318ms
[debug]         Load.loadUnit(file:/C:/Users/Nicolas%20Puente/Documents/La%20U/2022-1/Taller%20de%20Programación/Listener%20Position/project/, ...) took 164.8873ms
[debug]       Load.apply: load took 166.6584ms
[debug]       Load.apply: resolveProjects took 0.0838ms
[debug]       Load.apply: finalTransforms took 35.9473ms
[debug]       Load.apply: config.delegates took 0.4402ms
[debug]       Load.apply: Def.make(settings)... took 92.261ms
[debug]       Load.apply: structureIndex took 31.367ms
[debug]       Load.apply: mkStreams took 0.0017ms
[info] loading project definition from C:\Users\Nicolas Puente\Documents\La U\2022-1\Taller de Programación\Listener Position\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 2030.8307ms
[debug]     Load.loadUnit: defsScala took 0.0028ms
[debug] [Loading] Scanning directory C:\Users\Nicolas Puente\Documents\La U\2022-1\Taller de Programación\Listener Position
[debug]       Load.loadUnit: mkEval took 0.3119ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.5809 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 31.3103ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\Nicolas Puente\Documents\La U\2022-1\Taller de Programación\Listener Position, plugins: List(<none>))) took 35.9905ms
[debug] [Loading] Done in C:\Users\Nicolas Puente\Documents\La U\2022-1\Taller de Programación\Listener Position, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 2718.1717ms
[debug]     Load.loadUnit: cleanEvalClasses took 15.8508ms
[debug]   Load.loadUnit(file:/C:/Users/Nicolas%20Puente/Documents/La%20U/2022-1/Taller%20de%20Programación/Listener%20Position/, ...) took 4765.8943ms
[debug] Load.apply: load took 4768.83ms
[debug] Load.apply: resolveProjects took 0.0726ms
[debug] Load.apply: finalTransforms took 29.0567ms
[debug] Load.apply: config.delegates took 0.234ms
[debug] Load.apply: Def.make(settings)... took 61.5764ms
[debug] Load.apply: structureIndex took 23.0049ms
[debug] Load.apply: mkStreams took 0.0016ms
[info] set current project to Listener Position (in build file:/C:/Users/Nicolas%20Puente/Documents/La%20U/2022-1/Taller%20de%20Programación/Listener%20Position/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 55974 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 55974, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to Listener Position (in build file:/C:/Users/Nicolas%20Puente/Documents/La%20U/2022-1/Taller%20de%20Programación/Listener%20Position/)
[debug] > Exec(idea-shell, None, None)
